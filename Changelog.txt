Changelog for version 1.2.0
	- Added Json support with `Json()` and `JsonRead()`,
	- Added a new keyword `drop` for decrementing variables,
	- Added a new keyword `raise` for incrementing variables,
	- Codebase cleanup,
	- `WriteToFile` renamed to `WriteFile`,
	- `ReadFromFile` renamed to `ReadFile` and now it raises an error on fail,
	- Changed Struct definition syntax,
	- Changed function definition syntax,
	- Fixed a crash if you provided an invalid script filename to be interpreted,
	- Added a package manager,
	- Now `flase`, `non` and `lie` are another form of `false` and can be used interchangeably,
	- Further changes to variable system. Now if you want to add `const` or `global` to your variable. You have to use `remember`, but you don't have to if you are defining your var with no const or global,
	- (Not a change in the interpreter but) Added syntax highlight file for Notepad++,
	- Fixed a crash if you wanted to `#use` or `@use` a script file that didn't existed,
	- Updated all libraries to use the new syntax,
	- Changed all examples to use the new syntax,
	- Added a "very secure" UUID generator with `IterkoczeUUID()`,
	- Added hashing with SHA1 and the `SHA1` function,
	- Now `ReadAsInt` raises ErrorConversionFailed,
	- Fixed a crash if you left the `ReadAsInt` input blank,
	- Added `ClearRuntimeTimer()` to clear the RuntimeTimer duh,
	- Added `ToLower` and `ToUpper` for strings,
	- Added a new IO Standard Function `FileExists`,
	- Changed the way you define methods/functions. In this language it's all the same :)
	- Changed `foreach` to `each`,
	- Changed `return` to `give`,
	- Changed `else` to be `otherwise`,
	- Changed C like if block to be more fitting for the language,

Changelog for version 1.1.0
	- Updaed all examples,
	- Fixed a lot of minor bugs,
	- Codebase cleanup,
	- Added dictionaries,
	- Fixed foreach on Lists,
	- Reworked Structs. Now in order to define members, use the `member` keyword,
	- Rewritten the variable system,
	- Added constants,
	- Added global variables with keyword `global`,
	- Fixed a bug in whitch you coudn't assign new values to function arguments,
	- Fixed the disappearing variables bug while calling a function, 
	- Implemented missing `Execute` function,
	- Fixed a bug in whitch you could make variables with the same name as predefined constants
	- Added more utility functions (StartRuntimeTimer, StopRuntimeTimer, GetRuntime, Linux),
	- Improved the logic of doing math,
	- Finally added modulo, division and power of,
	- Added a new keyword `catapult` for catapulting exceptions
	- Finally added comments,
	- Changed a bit how if compares values,
	- Added new network functionality
	- Fixed a bug in whitch you could override standard functions,
	- Fixed importing script files and libraries with `using`,
	- Updated the `Utility` library,

Changelog for version 1.0.2
	- New error system,
	- Updated some examples,
	- Added a new keyword `crack` for stopping for loops and foreach loops,
	- Better syntax errors
	- Reworked the rework of calling methods,

Changelog for version 1.0.1
	- Reworked method calling and struct member access,
	- Struct access changed from `.` to `:`,
	- Now errors display the line number and additional information,
	- Interpreter will now return -1 instead of 1 when exiting on error,

Changelog for version 1.0.0
	- Added standardization to the language,
	- Fixed the infinite for loop bug,
	- Changed `array` to `Array`,
	- Now you need to say what kind of "object" you are creating with the `new` keyword (ex. new Struct Person P1)
	- Deleted IterkoczeScriptCompiler,
	- More "careful" interpreter with more error detection